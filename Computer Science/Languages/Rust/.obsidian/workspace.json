{
  "main": {
    "id": "d1f4b0535a8e5b45",
    "type": "split",
    "children": [
      {
        "id": "d597d937b99d07f3",
        "type": "tabs",
        "children": [
          {
            "id": "720515e01239845d",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "1. Rust Core/Rust Contents.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "a0226aab25d1116a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "1. Rust Core/Part 1 - The Rust Programming Language/11) Writing Automated Tests/1) How to Write Tests.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "0a01b2c6f1165eb8",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "1. Rust Core/Part 1 - The Rust Programming Language/11) Writing Automated Tests/3) Test Organisation.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "d9a4d920ec8e9ff3",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "1) Accepting Command Line Arguments.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "b40ff3b7866df02c",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "2) Reading a File.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "f8376744df11233a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "3) Refactoring to Improve Modularity and Error Handling.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "373d14eaff55007a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "4) Develop the Library's Functionality with Test Driven Development.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "428e6af8feb2b2b6",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "5) Working with Environment Variables.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "f6874003e4fa0e43",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "6) Writing Error Messages to Standard Error Instead of Standard Output.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "c27d1b8e44a64815",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "1. Rust Core/Part 1 - The Rust Programming Language/13) Iterators and Closures/1) Closures - Anonymous Functions that Capture Their Environment.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "3bf06f4ff58a6a00",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "2) Processing a Series of Items with Iterators.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "40e3dca7acff73fc",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "3) Improving Our I.O Project.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "52d83e5c129b2efb",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "4) Comparing Performance - Loops vs. Iterators.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ],
        "currentTab": 9
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "0c6af6480e36ed5e",
    "type": "split",
    "children": [
      {
        "id": "85abf1c5448daca9",
        "type": "tabs",
        "children": [
          {
            "id": "de73dbbcee913cc2",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "7452d89aab2bb159",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "let bytes = s.as_bytes();",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "b26446dedb2726bd",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 238.5
  },
  "right": {
    "id": "9bcaa6b75fe7f485",
    "type": "split",
    "children": [
      {
        "id": "6a51e3f62a8e5920",
        "type": "tabs",
        "children": [
          {
            "id": "0c953dbcd3407fe4",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "1. Rust Core/Part 1 - The Rust Programming Language/13) Iterators and Closures/1) Closures - Anonymous Functions that Capture Their Environment.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "449303db73e29632",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "1. Rust Core/Part 1 - The Rust Programming Language/13) Iterators and Closures/1) Closures - Anonymous Functions that Capture Their Environment.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "6f7ae5abd8b0f94a",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "3b12bfee6fdb8ef9",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "1. Rust Core/Part 1 - The Rust Programming Language/13) Iterators and Closures/1) Closures - Anonymous Functions that Capture Their Environment.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 211.5,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false
    }
  },
  "active": "c27d1b8e44a64815",
  "lastOpenFiles": [
    "1. Rust Core/Rust Contents.md",
    "1) Closures - Anonymous Functions that Capture Their Environment.md",
    "1. Rust Core/Part 1 - The Rust Programming Language/11) Writing Automated Tests/1) How to Write Tests.md",
    "1. Rust Core/Part 1 - The Rust Programming Language/10) Generic Types, Traits, and Lifetimes/3) Validating References with Lifetimes.md",
    "2) Reading a File.md",
    "3) Refactoring to Improve Modularity and Error Handling.md",
    "4) Develop the Library's Functionality with Test Driven Development.md",
    "5) Working with Environment Variables.md",
    "6) Writing Error Messages to Standard Error Instead of Standard Output.md",
    "1) Accepting Command Line Arguments.md",
    "4) Comparing Performance - Loops vs. Iterators.md",
    "3) Improving Our I.O Project.md",
    "2) Processing a Series of Items with Iterators.md",
    "1. Rust Core/Part 1 - The Rust Programming Language/13) Iterators and Closures/1) Closures - Anonymous Functions that Capture Their Environment.md",
    "1. Rust Core/Part 1 - The Rust Programming Language/3) Common Programming Concepts/5) Control Flow.md",
    "1. Rust Core/Part 1 - The Rust Programming Language/13) Functional Language Features - Iterators and Closures/Untitled.md",
    "1. Rust Core/Part 1 - The Rust Programming Language/13) Iterators and Closures",
    "1. Rust Core/Part 1 - The Rust Programming Language/11) Writing Automated Tests/3) Test Organisation.md",
    "1. Rust Core/Part 1 - The Rust Programming Language/4) Understanding Ownership/3) The Slice Type.md",
    "1. Rust Core/Part 1 - The Rust Programming Language/9) Error Handling/3) To panic! or Not to panic!.md",
    "1. Rust Core/Part 1 - The Rust Programming Language/8) Common Collections/2) Storing UTF-8 Encoded Text with Strings.md",
    "1. Rust Core/Part 1 - The Rust Programming Language/5) Using Structs to Structure Related Data/3) Method Syntax.md",
    "1. Rust Core/Part 1 - The Rust Programming Language/10) Generic Types, Traits, and Lifetimes/2) Traits - Defining Shared Behaviour.md",
    "Reading a File.md",
    "1. Rust Core/Part 1 - The Rust Programming Language/8) Common Collections/3) Storing Keys with Associated Values in Hash Maps.md",
    "1. Rust Core/Part 1 - The Rust Programming Language/10) Generic Types, Traits, and Lifetimes/1) Generic Data Types.md",
    "Validating References with Lifetimes.md",
    "1. Rust Core/Part 1 - The Rust Programming Language/11) Writing Automated Tests",
    "1. Rust Core/Part 1 - The Rust Programming Language/10) Generic Types, Traits, and Lifetimes",
    "1. Rust Core/Part 1 - The Rust Programming Language/9) Error Handling",
    "Pasted image 20230804204732.png",
    "1. Rust Core/Part 1 - The Rust Programming Language/7) Managing Growing Projects with Packages, Crates, and Modules",
    "1. Rust Core/Part 1 - The Rust Programming Language/6) Enums and Pattern Matching",
    "Pasted image 20230804234341.png",
    "1. Rust Core/Part 1 - The Rust Programming Language/4) Understanding Ownership",
    "2. Rust Libraries/sqlx",
    "1. Rust Core/Part 2 - Rust and WebAssembly",
    "1. Rust Core/Part 1 - The Rust Programming Language"
  ]
}